-- Create Employees Table
CREATE TABLE employees (
    employee_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR2(50),
    last_name VARCHAR2(50)
);

-- Create Attendance Table
CREATE TABLE attendance (
    attendance_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_id NUMBER,
    attendance_date DATE,
    status VARCHAR2(20),
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);


-- Insert Sample Employees with Rwandan Names
INSERT INTO employees (first_name, last_name) VALUES ('Kwizera', 'Jean');
INSERT INTO employees (first_name, last_name) VALUES ('Mukamana', 'Aline');
INSERT INTO employees (first_name, last_name) VALUES ('Nshimiyimana', 'Eric');
INSERT INTO employees (first_name, last_name) VALUES ('Uwase', 'Chantal');
INSERT INTO employees (first_name, last_name) VALUES ('Iradukunda', 'Sandrine');

-- Insert Sample Attendance Data across Different Months and Years

-- Attendance records for Employee ID 1 (Kwizera Jean) in October 2024
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (1, DATE '2024-10-01', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (1, DATE '2024-10-05', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (1, DATE '2024-10-15', 'Absent');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (1, DATE '2024-10-20', 'Present');

-- Attendance records for Employee ID 2 (Mukamana Aline) in September 2023
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (2, DATE '2023-09-03', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (2, DATE '2023-09-04', 'Absent');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (2, DATE '2023-09-10', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (2, DATE '2023-09-12', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (2, DATE '2023-09-20', 'Absent');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (2, DATE '2023-12-12', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (2, DATE '2023-12-02', 'Absent');


-- Attendance records for Employee ID 3 (Nshimiyimana Eric) in December 2022
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (3, DATE '2022-12-01', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (3, DATE '2022-12-05', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (3, DATE '2022-12-15', 'Absent');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (3, DATE '2022-12-20', 'Present');

-- Attendance records for Employee ID 4 (Uwase Chantal) in January 2025
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (4, DATE '2025-01-02', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (4, DATE '2025-01-10', 'Absent');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (4, DATE '2025-01-15', 'Present');


-- Attendance records for Employee ID 5 (Iradukunda Sandrine) in December 2024
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-10-03', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-10-04', 'Absent');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-10-10', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-10-15', 'Absent');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-10-20', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-10-25', 'Present');

INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-12-02', 'Absent');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-12-10', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-12-15', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-12-20', 'Absent');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-12-25', 'Present');
INSERT INTO attendance (employee_id, attendance_date, status) VALUES (5, DATE '2024-12-30', 'Absent');




-- Query to retrieve all employees in the employees table
SELECT * FROM employees;

-- Query to retrieve all attendance records in the attendance table
SELECT * FROM attendance;




-- Procedure to calculate attendance statistics for each employee within a specified month and year
CREATE OR REPLACE PROCEDURE Calculate_Attendance_Statistics (
    p_month IN NUMBER,    -- Input parameter: month for filtering attendance records
    p_year IN NUMBER      -- Input parameter: year for filtering attendance records
) IS
    -- Variable declarations
    v_total_presents NUMBER := 0;       -- Counter for number of 'Present' days
    v_total_absents NUMBER := 0;        -- Counter for number of 'Absent' days
    v_total_records NUMBER;             -- Total attendance records for the month (presents + absents)
    v_attendance_percentage NUMBER;     -- Calculated attendance percentage
    v_start_date DATE;                  -- Start date for the specified month
    v_end_date DATE;                    -- End date for the specified month
    
    -- Cursor to iterate through each employee in the employees table
    CURSOR emp_cursor IS
        SELECT employee_id, first_name, last_name
        FROM employees;

BEGIN
    -- Calculate the first and last dates of the specified month and year
    v_start_date := TO_DATE(p_year || '-' || p_month || '-01', 'YYYY-MM-DD');
    v_end_date := LAST_DAY(v_start_date); -- Last day of the month determined by v_start_date

    -- Outer loop: Process each employee in the employees table
    FOR emp_rec IN emp_cursor LOOP
        -- Reset attendance counters for each new employee
        v_total_presents := 0;
        v_total_absents := 0;

        -- Inner loop: Count presents and absents for the employee within the specified month
        FOR attendance_rec IN (
            SELECT status
            FROM attendance
            WHERE employee_id = emp_rec.employee_id
            AND attendance_date BETWEEN v_start_date AND v_end_date
        ) LOOP
            -- Increment the counter based on the attendance status
            IF attendance_rec.status = 'Present' THEN
                v_total_presents := v_total_presents + 1;  -- Increment present counter
            ELSIF attendance_rec.status = 'Absent' THEN
                v_total_absents := v_total_absents + 1;    -- Increment absent counter
            END IF;
        END LOOP;

        -- Calculate total attendance records (presents + absents)
        v_total_records := v_total_presents + v_total_absents;
        
        -- If there are attendance records for the employee in the specified month
        IF v_total_records > 0 THEN
            -- Calculate attendance percentage based on the recorded attendance days
            v_attendance_percentage := (v_total_presents / v_total_records) * 100;

            -- Display employee's attendance statistics
            DBMS_OUTPUT.PUT_LINE('Employee: ' || emp_rec.first_name || ' ' || emp_rec.last_name);
            DBMS_OUTPUT.PUT_LINE('Total Presents: ' || v_total_presents);
            DBMS_OUTPUT.PUT_LINE('Total Absents: ' || v_total_absents);
            DBMS_OUTPUT.PUT_LINE('Attendance Percentage: ' || ROUND(v_attendance_percentage, 2) || '%');
            DBMS_OUTPUT.PUT_LINE('------------------------------------');
        ELSE
            -- If no attendance records are found for the specified month, display a message
            DBMS_OUTPUT.PUT_LINE('Employee: ' || emp_rec.first_name || ' ' || emp_rec.last_name);
            DBMS_OUTPUT.PUT_LINE('No attendance records found for the specified month and year.');
            DBMS_OUTPUT.PUT_LINE('------------------------------------');
        END IF;
    END LOOP;

EXCEPTION
    -- Exception handler to capture any unexpected errors and display the error message
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END Calculate_Attendance_Statistics;
/



SET SERVEROUTPUT ON;

-- Test Case: October 2024
-- Expected output should display attendance statistics for each employee in October 2024.
BEGIN
     Calculate_Attendance_Statistics(10, 2024);
END;
/

-- Test Case: September 2023
-- Expected output should display attendance statistics for each employee in September 2023.
BEGIN
     Calculate_Attendance_Statistics(9, 2023);
END;
/

-- Test Case: December 2022
-- Expected output should display attendance statistics for each employee in December 2022.
BEGIN
     Calculate_Attendance_Statistics(12, 2022);
END;
/

-- Test Case: December 2024
-- Expected output should display attendance statistics for each employee in December 2024.
BEGIN
     Calculate_Attendance_Statistics(12, 2024);
END;
/

-- Test Case: December 2023
-- Expected output should display attendance statistics for each employee in December 2023.
BEGIN
     Calculate_Attendance_Statistics(12, 2023);
END;
/
